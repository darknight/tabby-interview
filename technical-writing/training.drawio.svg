<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="792px" height="752px" viewBox="-0.5 -0.5 792 752" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2023-10-31T14:01:40.922Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 Edg/118.0.2088.76&quot; etag=&quot;Z0_3WsBfB8nFXnBNgNSf&quot; version=&quot;22.0.8&quot; type=&quot;device&quot;&gt;&lt;diagram name=&quot;Page-1&quot; id=&quot;pDSWcLgXjC2x-1NlW8r4&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs/><g><rect x="0" y="0" width="100" height="40" rx="6" ry="6" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 98px; height: 1px; padding-top: 20px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">TokenizerImpl</div></div></div></foreignObject><text x="50" y="24" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">TokenizerImpl</text></switch></g><path d="M 50 40 L 50 80 L 73.63 80" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 78.88 80 L 71.88 83.5 L 73.63 80 L 71.88 76.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="80" y="60" width="320" height="50" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 318px; height: 1px; padding-top: 85px; margin-left: 81px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">train_from_files(<b>trainer</b>: BpeTrainer, files: Vec&lt;String&gt;)</div></div></div></foreignObject><text x="240" y="89" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">train_from_files(trainer: BpeTrainer, files: Vec&lt;Stri...</text></switch></g><rect x="130" y="130" width="450" height="50" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 448px; height: 1px; padding-top: 155px; margin-left: 131px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b>trainer</b>.feed(iterator: Iterator&lt;Item=AsRef&lt;str&gt;&gt;, <i><u>process</u></i>: Fn(&amp;str) -&gt; Vec&lt;String&gt;)</div></div></div></foreignObject><text x="355" y="159" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">trainer.feed(iterator: Iterator&lt;Item=AsRef&lt;str&gt;&gt;, process: Fn(&amp;str) -&gt; Vec&lt;...</text></switch></g><path d="M 100 110 L 100 155 L 123.63 155" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 128.88 155 L 121.88 158.5 L 123.63 155 L 121.88 151.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 100 150 L 100 245 L 123.63 245" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 128.88 245 L 121.88 248.5 L 123.63 245 L 121.88 241.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="130" y="220" width="150" height="50" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 148px; height: 1px; padding-top: 245px; margin-left: 131px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b>trainer</b>.train(mode: BPE)</div></div></div></foreignObject><text x="205" y="249" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">trainer.train(mode: BPE)</text></switch></g><rect x="190" y="300" width="420" height="50" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 418px; height: 1px; padding-top: 325px; margin-left: 191px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b>trainer</b>.do_train(<u>word_counts</u>: &amp;HashMap&lt;String, u32&gt;, model: &amp;mut BPE)</div></div></div></foreignObject><text x="400" y="329" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">trainer.do_train(word_counts: &amp;HashMap&lt;String, u32&gt;, model: &amp;mut BPE)</text></switch></g><path d="M 150.7 271.15 L 150 325 L 183.63 325" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 188.88 325 L 181.88 328.5 L 183.63 325 L 181.88 321.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 355 180 L 320.54 317.83" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 318.09 309.09 L 320.27 318.92 L 326.82 311.28" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="250" y="360" width="290" height="50" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 288px; height: 1px; padding-top: 385px; margin-left: 251px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">// 1. Add all special tokens to the vocabulary<b><br /></b><b>trainer</b>.add_special_tokens(...)</div></div></div></foreignObject><text x="395" y="389" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">// 1. Add all special tokens to the vocabularytr...</text></switch></g><path d="M 210 350 L 210 385 L 243.63 385" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 248.88 385 L 241.88 388.5 L 243.63 385 L 241.88 381.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="250" y="420" width="230" height="50" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 228px; height: 1px; padding-top: 445px; margin-left: 251px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">// 2. Compute the initial alphabet<b><br /></b><b>trainer</b>.compute_alphabet(...)</div></div></div></foreignObject><text x="365" y="449" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">// 2. Compute the initial alphabettrai...</text></switch></g><path d="M 210 380 L 210 445 L 243.63 445" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 248.88 445 L 241.88 448.5 L 243.63 445 L 241.88 441.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="250" y="480" width="410" height="50" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 408px; height: 1px; padding-top: 505px; margin-left: 251px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">// 3. Tokenize words<b><br /></b>let (words: Vec&lt;Word&gt;, counts: Vec&lt;u32&gt;) =<b> trainer</b>.tokenize_words(...)</div></div></div></foreignObject><text x="455" y="509" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">// 3. Tokenize wordslet (words: Vec&lt;Word&gt;, counts: Vec&lt;u32&gt;) = train...</text></switch></g><path d="M 210 440 L 210 505 L 243.63 505" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 248.88 505 L 241.88 508.5 L 243.63 505 L 241.88 501.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="250" y="540" width="360" height="50" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 358px; height: 1px; padding-top: 565px; margin-left: 251px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">// 4. Count pairs in words<b><br /></b>let (pair_counts, where_to_update) =<b> trainer</b>.count_pairs(...)</div></div></div></foreignObject><text x="430" y="569" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">// 4. Count pairs in wordslet (pair_counts, where_to_update)...</text></switch></g><path d="M 210 500 L 210 565 L 243.63 565" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 248.88 565 L 241.88 568.5 L 243.63 565 L 241.88 561.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="250" y="600" width="290" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 288px; height: 1px; padding-top: 630px; margin-left: 251px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">// 5. Do merges<br />let queue: BinaryHeap&lt;Merge&gt; = ......;<br style="border-color: var(--border-color);" />loop { ...... }</div></div></div></foreignObject><text x="395" y="634" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">// 5. Do merges...</text></switch></g><path d="M 210 560 L 210 625 L 243.63 625" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 248.88 625 L 241.88 628.5 L 243.63 625 L 241.88 621.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="250" y="670" width="420" height="80" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 418px; height: 1px; padding-top: 710px; margin-left: 251px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b>model</b>.vocab: HashMap&lt;String, u32&gt; = // word_to_id<br /><b>model</b>.vocab_r: HashMap&lt;u32, String&gt; = // id_to_word<br /><b>model</b>.merges: HashMap&lt;Pair, (u32, u32)&gt; = // (id1, id2) -&gt; new_token_id</div></div></div></foreignObject><text x="460" y="714" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">model.vocab: HashMap&lt;String, u32&gt; = // word_to_id...</text></switch></g><path d="M 210 620 L 210 695 L 243.63 695" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 248.88 695 L 241.88 698.5 L 243.63 695 L 241.88 691.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="450" y="200" width="340" height="80" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 338px; height: 1px; padding-top: 240px; margin-left: 451px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">let normalized = <b>do_normalize</b>(......)<br />let pre_tokenized = <b>do_pre_tokenize</b>(normalized)<br />pre_tokenized.get_splits().into_iter().map(......).collect()</div></div></div></foreignObject><text x="620" y="244" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">let normalized = do_normalize(......)...</text></switch></g><path d="M 415 160 L 415 240 L 443.63 240" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 448.88 240 L 441.88 243.5 L 443.63 240 L 441.88 236.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>